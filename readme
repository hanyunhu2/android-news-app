android recycle view
news app


https://developer.android.com/guide/topics/ui/layout/recyclerview

앱 모듈의 build.gradle 파일 열기
dependencies 섹션에 지원 라이브러리 추가
    dependencies {
        implementation 'com.android.support:recyclerview-v7:28.0.0'
    }
    
==>
androidx
==>
https://codingwithmitch.com/blog/what-is-androidx/
Step 2. Migrating to AndroidX

Now that you have Android Studio version 3.+, migrating to AndroidX is very simple. 

In Android Studio go to Refactor > Migrate to AndroidX 


 implementation 'androidx.recyclerview:recyclerview:1.0.0'
 
 news api
 News API - A JSON API for live news and blog articles
https://newsapi.org

android cardview

https://developer.android.com/guide/topics/ui/layout/cardview

    dependencies {
        implementation 'com.android.support:cardview-v7:28.0.0'
    }
    
    
    dependencies {

    implementation 'androidx.appcompat:appcompat:1.0.0'

    implementation 'androidx.cardview:cardview:1.0.0'

androidx.cardview.widget.CardView

    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        ... >
        <!-- A CardView that contains a TextView -->
        <android.support.v7.widget.CardView
            xmlns:card_view="http://schemas.android.com/apk/res-auto"
            android:id="@+id/card_view"
            android:layout_gravity="center"
            android:layout_width="200dp"
            android:layout_height="200dp"
            card_view:cardCornerRadius="4dp">

            <TextView
                android:id="@+id/info_text"
                android:layout_width="match_parent"
                android:layout_height="match_parent" />
        </android.support.v7.widget.CardView>
    </LinearLayout>
    
    
            <androidx.cardview.widget.CardView
            xmlns:card_view="http://schemas.android.com/apk/res-auto"
            android:id="@+id/card_view"
            android:layout_gravity="center"
            android:layout_width="200dp"
            android:layout_height="200dp"
            card_view:cardCornerRadius="4dp">

            <TextView
                android:id="@+id/info_text"
                android:layout_width="match_parent"
                android:layout_height="match_parent" />
        </androidx.cardview.widget.CardView>


json : 
fresco : facebook image 관리
android volley : http 통신

https://github.com/facebook/fresco
implementation 'com.facebook.fresco:fresco:2.0.0'

https://github.com/google/volley/blob/master/rules.gradle
https://github.com/google/volley

implementation "androidx.annotation:annotation:1.0.1"



모든 데이터를 한번에 내려받는 것이 아니고, 적절한 크기의(예: 30개) 데이터를 받아서 화면에 보여주는 방식입니다. 
특이점은 모바일에서는 Infinite scrolling(Endless scrolling)이라고 하는 모바일에 최적화된 UX입니다. 
스크롤이 페이지 하단에 도달하는 것을 감지해서 다음 페이지의 데이터를 받아오는 기법이고요. 
트위터, 핀터레스트, 플레이스토어 등등 많은 앱들이 이러한 방식을 사용합니다.

[android] Infinite Scroll 구현 예제
https://codehanry.tistory.com/17



row data list click link
https://coding-dahee.tistory.com/36

scrolling data list more
https://stackoverflow.com/questions/36471309/endless-scrolling-in-recyclerview-how-should-i-implement-this




Try to pass the serializable list using Bundle.Serializable:

Bundle bundle = new Bundle();
bundle.putSerializable("value", all_thumbs);
intent.putExtras(bundle);
And in SomeClass Activity get it as:

Intent intent = this.getIntent();
Bundle bundle = intent.getExtras();

List<Thumbnail> thumbs=
               (List<Thumbnail>)bundle.getSerializable("value");
